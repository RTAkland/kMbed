package io.karma.kmbed.gradle

import org.intellij.lang.annotations.Language
import java.util.*

internal class ResourceHeader {
    companion object {
        @Language("c++")
        private val PROLOGUE: String = """
            |/**
            | * This file was generated by the KMbed resource compiler.
            | * !!! DO NOT EDIT THIS FILE BY HAND !!!
            | * KMbed Resource Compiler v${BuildInfo.VERSION}
            | */
            |
            |#pragma once
            |#ifdef __cplusplus
            |extern "C" {
            |#endif //__cplusplus
        """.trimMargin()

        @Language("c++")
        private val EPILOGUE: String = """
            |#ifdef __cplusplus
            |}
            |#endif //__cplusplus
        """.trimMargin()
    }

    private val builder: StringBuilder = StringBuilder()
    private var indentStack: Stack<Int> = Stack()
    private var currentIndent: Int = 0

    fun append(@Language("c++") s: String) {
        for (i in 0..<currentIndent) {
            builder.append('\t')
        }
        builder.append(s)
    }

    fun line(@Language("c++") s: String) = append("$s\n")

    fun newline() {
        builder.append('\n')
    }

    fun pushIndent() {
        indentStack.push(currentIndent)
        currentIndent++
    }

    fun pushIndent(indent: Int) {
        indentStack.push(currentIndent)
        currentIndent = indent
    }

    fun popIndent() {
        currentIndent = indentStack.pop()
    }

    fun render(): String {
        builder.insert(0, PROLOGUE + "\n\n")
        builder.append('\n' + EPILOGUE)
        return builder.toString()
    }
}