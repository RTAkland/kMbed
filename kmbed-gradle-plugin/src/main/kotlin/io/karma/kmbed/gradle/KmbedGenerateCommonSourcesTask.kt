package io.karma.kmbed.gradle

import org.gradle.api.DefaultTask
import org.gradle.api.file.DirectoryProperty
import org.gradle.api.tasks.OutputDirectory
import org.gradle.api.tasks.TaskAction
import java.nio.file.StandardOpenOption
import kotlin.io.path.createDirectories
import kotlin.io.path.deleteIfExists
import kotlin.io.path.div
import kotlin.io.path.outputStream

/**
 * @author Alexander Hinze
 * @since 20/01/2025
 */
abstract class KmbedGenerateCommonSourcesTask : DefaultTask() {
    @get:OutputDirectory
    abstract val sourceDirectory: DirectoryProperty

    private val extension = project.extensions.getByType(KmbedProjectExtension::class.java)

    @TaskAction
    fun invoke() {
        val outputDir = sourceDirectory.get().asFile.toPath()
        outputDir.createDirectories()
        val sourcePath = outputDir / "__kmbed_resources.kt"

        val source = SourceBuilder().apply {
            line("""// Generated by the KMbed resource compiler ${BuildInfo.VERSION}""")
            line("""// !!! DO NOT EDIT THIS FILE BY HAND !!!""")
            newline()
            line("""package ${extension.resourceNamespace}""")
            newline()
            line("""import io.karma.kmbed.runtime.AbstractResources""")
            newline()
            line("""expect val R: AbstractResources""")
        }

        sourcePath.deleteIfExists()
        sourcePath.parent?.createDirectories()
        sourcePath.outputStream(StandardOpenOption.CREATE).bufferedWriter().use {
            it.write(source.render())
            it.flush()
        }
    }
}